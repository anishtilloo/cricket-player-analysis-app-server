generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  refreshTokens RefreshToken[]

  @@map("Users")
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("RefreshTokens")
}

model Team {
  id          Int      @id @default(autoincrement())
  teamName    String
  ownerName   String
  coach       Json
  netWorth    Float
  teamLogo    String
  players     Player[]

  @@unique([id, teamName])
  @@map("Teams")
}

model Player {
  id              Int             @id @default(autoincrement())
  playerName      String
  playerImg       String
  characteristics String[]
  height          Float
  weight          Float
  basePrise       Float
  actualPrise     Float
  fitnessScore    Float
  injured         Json
  analysis        Json
  physicals       Json
  mentalStats     Json
  playerType      PLAYERTYPE
  teamId          Int
  teamName        String
  team            Team            @relation(fields: [teamId, teamName], references: [id, teamName])

  @@map("Players")
}


enum PLAYERTYPE {
  BATSMEN
  BATSMEN_WICKETKEEPER
  BOWLER
  ALL_ROUNDER
}
